@article{ref1,
	title = {The {Augmented} {Web}: {Rationales}, {Opportunities}, and {Challenges} on {Browser}-{Side} {Transcoding}},
	volume = {9},
	shorttitle = {The {Augmented} {Web}},
	doi = {10.1145/2735633},
	abstract = {Today's web personalization technologies use approaches like user categorization, configuration, and customization but do not fully support individualized requirements. As a significant portion of our social and working interactions are migrating to the web, we can expect an increase in these kinds of minority requirements. Browser-side transcoding holds the promise of facilitating this aim by opening personalization to third parties through web augmentation (WA), realized in terms of extensions and userscripts. WA is to the web what augmented reality is to the physical world: to layer relevant content/layout/navigation over the existing web to improve the user experience. From this perspective, WA is not as powerful as web personalization since its scope is limited to the surface of the web. However, it permits this surface to be tuned by developers other than the sites' webmasters. This opens up the web to third parties who might come up with imaginative ways of adapting the web surface for their own purposes. Its success is backed up by millions of downloads. This work looks at this phenomenon, delving into the "what," the "why," and the "what for" of WA, and surveys the challenges ahead for WA to thrive. To this end, we appraise the most downloaded 45 WA extensions for Mozilla Firefox and Google Chrome as well as conduct a systematic literature review to identify what quality issues received the most attention in the literature. The aim is to raise awareness about WA as a key enabler of the personal web and point out research directions.},
	journal = {ACM Transactions on the Web},
	author = {Díaz, Oscar and Arellano, Cristóbal},
	month = may,
	year = {2015},
	pages = {1--30},
	file = {Full Text PDF:/home/quentin/Zotero/storage/LRRLM2WU/Díaz and Arellano - 2015 - The Augmented Web Rationales, Opportunities, and .pdf:application/pdf}
}

@incollection{ref2,
	title = {End-{User} {Development}: {An} {Emerging} {Paradigm}},
	volume = {9},
	isbn = {978-1-4020-4220-1},
	shorttitle = {End-{User} {Development}},
	abstract = {We think that over the next few years, the goal of interactive systems and services will evolve from just making systems easy to use (even though that goal has not yet been completely achieved) to making systems that are easy to develop by end users. By now, most people have become familiar with the basic functionality and interfaces of computers, but they are not able to manage any programming language. Therefore, they cannot develop new applications or modify current ones according to their needs.
In order to address such challenges it is necessary a new paradigm, based on a multidisciplinary approach involving several types of expertise, such as software engineering, human-computer interaction, CSCW, which are now rather fragmented and with little interaction. The resulting methods and tools can provide results useful across many application domains, such as ERP, multi-device services (accessible through both mobile and stationary devices), and professional applications.
Key words. tailorability, end user programming, flexibility, usability},
	booktitle = {End {User} {Dev}.},
	author = {Lieberman, Henry and Paternò, Fabio and Klann, Markus and Wulf, Volker},
	month = jan,
	year = {2006},
	doi = {10.1007/1-4020-5386-X_1},
	note = {Journal Abbreviation: End User Dev.},
	pages = {1--8},
	file = {Full Text PDF:/home/quentin/Zotero/storage/QMWLGJZ8/Lieberman et al. - 2006 - End-User Development An Emerging Paradigm.pdf:application/pdf}
}

@article{ref3,
	title = {A {Language} for {End}-{User} {Web} {Augmentation}: {Caring} for {Producers} and {Consumers} {Alike}},
	volume = {7},
	shorttitle = {A {Language} for {End}-{User} {Web} {Augmentation}},
	doi = {10.1145/2460383.2460388},
	abstract = {Web augmentation is to the Web what augmented reality is to the physical world: layering relevant content/layout/navigation over the existing Web to customize the user experience. This is achieved through JavaScript (JS) using browser weavers (e.g., Greasemonkey). To date, over 43 million of downloads of Greasemonkey scripts ground the vitality of this movement. However, Web augmentation is hindered by being programming intensive and prone to malware. This prevents end-users from participating as both producers and consumers of scripts: producers need to know JS, consumers need to trust JS. This article aims at promoting end-user participation in both roles. The vision is for end-users to prosume (the act of simultaneously caring for producing and consuming) scripts as easily as they currently prosume their pictures or videos. Encouraging production requires more “natural” and abstract constructs. Promoting consumption calls for augmentation scripts to be easier to understand, share, and trust upon. To this end, we explore the use of Domain-Specific Languages (DSLs) by introducing Sticklet. Sticklet is an internal DSL on JS, where JS generality is reduced for the sake of learnability and reliability. Specifically, Web augmentation is conceived as fixing in existing web sites (i.e., the wall) HTML fragments extracted from either other sites or Web services (i.e., the stickers). Sticklet targets hobby programmers as producers, and computer literates as consumers. From a producer perspective, benefits are threefold. As a restricted grammar on top of JS, Sticklet expressions are domain oriented and more declarative than their JS counterparts, hence speeding up development. As syntactically correct JS expressions, Sticklet scripts can be installed as traditional scripts and hence, programmers can continue using existing JS tools. As declarative expressions, they are easier to maintain, and amenable for optimization. From a consumer perspective, domain specificity brings understandability (due to declarativeness), reliability (due to built-in security), and “consumability” (i.e., installation/enactment/sharing of Sticklet expressions are tuned to the shortage of time and skills of the target audience). Preliminary evaluations indicate that 77\% of the subjects were able to develop new Sticklet scripts in less than thirty minutes while 84\% were able to consume these scripts in less than ten minutes. Sticklet is available to download as a Mozilla add-on.},
	journal = {ACM Transactions on the Web},
	author = {Díaz, Oscar and Arellano, Cristóbal and Azanza, Maider},
	month = may,
	year = {2013},
	file = {Full Text PDF:/home/quentin/Zotero/storage/9DZF8VVU/Díaz et al. - 2013 - A Language for End-User Web Augmentation Caring f.pdf:application/pdf}
}

@book{ref4,
	title = {Ambient {Amp}: {An} {Open} {Framework} {For} {Dynamically} {Augmenting} {Legacy} {Websites} with {Context}-awareness},
	shorttitle = {Ambient {Amp}},
	abstract = {Emerging context frameworks enable Websites to interact with the Internet of Things directly from the browser; however, Websites must be specifically designed to utilize such context framework support. As such, the majority of “legacy” Websites remains context-unaware. This paper presents Ambient Amp: an open framework for dynamically augmenting legacy Websites with context-awareness, without requiring browser extensions, proxies or Website reengineering. Amp provides an extensible Bookmarklet framework that serves as a conduit between the user’s browser and a server-side repository of Amp plug-ins, which can be used to dynamically augment any 3rd party Website with new content, adapted behavior and context framework support – enabling augmented Websites to sense the user’s physical environment and interact with discovered smart devices. This paper introduces the Amp architecture, its fully operational prototype and an example Amp plug-in that augments a well-known photo sharing Website with the ability to stream selected images to networked media devices discovered in the user’s physical environment (e.g., smart televisions). We also present a preliminary performance evaluation, which indicates that Amp is suitable for deployment on many commodity mobile devices.},
	author = {Carlson, Darren and Ruge, Lukas},
	month = apr,
	year = {2014},
	doi = {10.1109/ISSNIP.2014.6827676}
}

@book{ref5,
	title = {A generic approach for on-the-fly adding of context-aware features to existing websites},
	abstract = {More and more, mobile devices act as personal information managers and are able to obtain rich contextual information on the user's environment. Mobile, context-aware web applications can exploit this information to better address the needs of mobile users. Currently, such websites are either developed separately from their associated desktop-oriented version, or both versions are created simultaneously by employing methodologies that support multi-platform context-aware websites, requiring an extensive engineering effort. While these approaches provide a solution for developing new websites, they go past the plethora of existing websites. To address this issue, we present an approach for enhancing existing websites on-the-fly with context-aware features. We first discuss the requirements for such an adaptation process, and identify applicable adaptation methods to realize context-aware features. Next, we explain our generic approach, which is grounded in the use of semantic information extracted from existing websites. Finally, we present a concrete application of our approach that is based on the SCOUT framework for mobile and context-aware application development.},
	author = {Van Woensel, William and Casteleyn, Sven and Troyer, Olga},
	month = jan,
	year = {2011},
	doi = {10.1145/1995966.1995987},
	note = {Journal Abbreviation: HT 2011 - Proceedings of the 22nd ACM Conference on Hypertext and Hypermedia
Pages: 152
Publication Title: HT 2011 - Proceedings of the 22nd ACM Conference on Hypertext and Hypermedia},
	file = {Full Text PDF:/home/quentin/Zotero/storage/DQ56YLE7/Van Woensel et al. - 2011 - A generic approach for on-the-fly adding of contex.pdf:application/pdf}
}

@article{ref6,
	title = {Model-driven {Engineering} of {Active} {Context}-{Awareness}},
	volume = {10},
	doi = {10.1007/s11280-006-0014-5},
	abstract = {More and more Web users ask for contents and services highly tailored to their particular contexts of use. Especially due to the increasing affordability of new and powerful mobile communication de- vices, they also appreciate the availability of ubiquitous access, indepen- dent from the device actually in use. Due to such premises, traditional software design methods need to be extended, and new issues and re- quirements need to be addressed for supporting context-aware access to services and applications. In this paper we propose a model-driven approach towards adaptive, context-aware Web applications, accompanied by a general-purpose ex- ecution framework enabling active context-awareness. Whereas conven- tional adaptive hypermedia systems address the problem of adapting HTML pages in response to user-generated requests, in this work we especially stress the importance of user-independent, context-triggered adaptivity actions. This finally leads us to interpret the context as an ac- tive actor, operating independently from users during their navigations.},
	journal = {World Wide Web},
	author = {Ceri, Stefano and Daniel, Florian and Facca, Federico and Matera, Maristella},
	month = oct,
	year = {2007},
	pages = {387--413},
	file = {Full Text PDF:/home/quentin/Zotero/storage/JY9NVUCE/Ceri et al. - 2007 - Model-driven Engineering of Active Context-Awarene.pdf:application/pdf}
}

@book{ref7,
	title = {Designing and {Developing} {Context}-{Aware} {Mobile} {Mashups}: {The} {CAMUS} {Approach}},
	volume = {9114},
	isbn = {978-3-319-19889-7},
	shorttitle = {Designing and {Developing} {Context}-{Aware} {Mobile} {Mashups}},
	abstract = {CAMUS (Context-Aware Mobile mashUpS) is a framework for the design of mobile applications that dynamically collect and integrate heterogeneous resources (data sources and services) to offer integrated content and functions to mobile users in a context-aware fashion. CAMUS exploits a set of high-level abstractions for context and mashup modeling that hide the complexity resulting from service selection, invocation and integration. Generative techniques then enable the transformation of models into running code for mobile applications that flexibly respond to actual user needs as they vary in different situations of use.},
	author = {Corvetta, Fabio and Matera, Maristella and Medana, Riccardo and Quintarelli, Elisa and Rizzo, Vincenzo and Tanca, Letizia},
	month = jun,
	year = {2015},
	doi = {10.1007/978-3-319-19890-3_49},
	note = {Journal Abbreviation: LNCS
Pages: 654
Publication Title: LNCS}
}

@article{ref8,
	title = {{CASTOR}: {Learning} to create context-sensitive and emotionally engaging narrations in-situ},
	shorttitle = {{CASTOR}},
	doi = {10.1145/2307096.2307098},
	abstract = {This paper describes the design and the experimentation of a tablet-based authoring system for supporting the creation of stories in-situ, in the context of a learning path that has led 19 children aged 7 of the second class of a Primary School to learn how to build stories using different techniques, ranging from the traditional writing techniques exercised in class to the in-situ authoring with the tablet application. The project was characterized by a strong involvement of the teachers, that modeled a substantial part of the ordinary classroom work for embedding the in-situ experimentation and designing a smooth learning path.
To our knowledge CASTOR is one of the first authoring systems allowing the direct creation of structured stories in-situ, rather than the simple gathering of material. Its architecture is based on a story model presented in previous works [3, 20] and characterized by the use of the environmental and social context for augmenting the emotional engagement of the story listeners.
All the components of the architecture have been designed for complying with the learning needs and the skills of a class of young children. The final part of the paper will present the results of the experimentation, that gave interesting insights not only on the use of the authoring interface itself, but also on its effects on the children learning process.},
	author = {Pittarello, Fabio and Bertani, Luca},
	month = nov,
	year = {2013},
	file = {Full Text PDF:/home/quentin/Zotero/storage/KJIYT8MG/Pittarello and Bertani - 2013 - CASTOR Learning to create context-sensitive and e.pdf:application/pdf}
}

@article{ref9,
	title = {A {UI}-{Centric} {Approach} for the {End}-{User} {Development} of {Multidevice} {Mashups}},
	volume = {9},
	doi = {10.1145/2735632},
	abstract = {In recent years, models, composition paradigms, and tools for mashup development have been proposed to support the integration of information sources, services and APIs available on the Web. The challenge is to provide a gate to a "programmable Web," where end users are allowed to construct easily composite applications that merge content and functions so as to satisfy the long tail of their specific needs. The approaches proposed so far do not fully accommodate this vision. This article, therefore, proposes a mashup development framework that is oriented toward the End-User Development. Given the fundamental role of user interfaces (UIs) as a medium easily understandable by the end users, the proposed approach is characterized by UI-centric models able to support a WYSIWYG (What You See Is What You Get) specification of data integration and service orchestration. It, therefore, contributes to the definition of adequate abstractions that, by hiding the technology and implementation complexity, can be adopted by the end users in a kind of "democratic" paradigm for mashup development. This article also shows how model-to-code generative techniques translate models into application schemas, which in turn guide the dynamic instantiation of the composite applications at runtime. This is achieved through lightweight execution environments that can be deployed on the Web and on mobile devices to support the pervasive use of the created applications.},
	journal = {ACM Transactions on the Web},
	author = {Cappiello, Cinzia and Matera, Maristella and Picozzi, Matteo},
	month = jun,
	year = {2015},
	file = {Submitted Version:/home/quentin/Zotero/storage/PRUMQP2K/Cappiello et al. - 2015 - A UI-Centric Approach for the End-User Development.pdf:application/pdf}
}

@article{ref10,
	title = {An {End}-{User} {Development} approach for {Mobile} {Web} {Augmentation}},
	url = {http://arxiv.org/abs/1906.01418},
	abstract = {The trend towards mobile devices usage has put more than ever the Web as a ubiquitous platform where users perform all kind of tasks. In some cases, users access the Web with 'native' mobile applications developed for well-known sites, such as LinkedIn, Facebook, Twitter, etc. These native applications might offer further (e.g. location-based) functionalities to their users in comparison with their corresponding Web sites, because they were developed with mobile features in mind. However, most Web applications have not this native mobile counterpart and users access them using browsers in the mobile device. Users might eventually want to add mobile features on these Web sites even though those features were not supported originally. In this paper we present a novel approach to allow end users to augment their preferred Web sites with mobile features. This end-user approach is supported by a framework for mobile Web augmentation that we describe in the paper. We also present a set of supporting tools and a validation experiment with end users.},
	urldate = {2020-10-07},
	journal = {arXiv:1906.01418 [cs]},
	author = {Bosetti, Gabriela and Firmenich, Sergio and Gordillo, Silvia and Rossi, Gustavo and Winckler, Marco},
	month = jun,
	year = {2019},
	note = {arXiv: 1906.01418},
	keywords = {Computer Science - Human-Computer Interaction},
	file = {arXiv Fulltext PDF:/home/quentin/Zotero/storage/IQN5MVP7/Bosetti et al. - 2019 - An End-User Development approach for Mobile Web Au.pdf:application/pdf;arXiv.org Snapshot:/home/quentin/Zotero/storage/BG5YSLVA/1906.html:text/html}
}
